zookeeper:
  properties:
    clientPort: 2181
kerberos:
  keytab_dir: /etc/security/keytabs
confluent:
  package_version: 5.3.1-1
  repo_version: 5.3
  support:
    customer_id: anonymous
    metrics_enabled: true

jolokia_jar_path: /opt/jolokia/jolokia.jar
zookeeper_jolokia_port: 7770
kafka_broker_jolokia_port: 7771
schema_registry_jolokia_port: 7772
kafka_connect_jolokia_port: 7773
ksql_jolokia_port: 7774
kafka_rest_jolokia_port: 7775

open_file_limit: 500000
kerberos_configure: true

jolokia_enabled: true

jmxexporter_enabled: false
jmxexporter_install_path: /opt/prometheus/
jmxexporter_jar_path: /opt/prometheus/jmx_prometheus_javaagent.jar
kafka_broker_jmxexporter_port: 8080

custom_yum_repofile: false
custom_apt_repo: false

rbac_enabled: false
confluent_server_enabled: "{{ true if rbac_enabled|bool else false }}"

## SASL Variables: plain, kerberos, scram
sasl_protocol: none

## SSL Variables
ssl_enabled: false
ssl_mutual_auth_enabled: false

ssl_provided_keystore_and_truststore: false
ssl_custom_certs: false
# With self_signed on and ssl_enabled off, self_signed var should not get honored
self_signed: "{{ false if ssl_provided_keystore_and_truststore|bool or ssl_custom_certs|bool else true }}"
ssl_self_signed_ca_cert_filename: snakeoil-ca-1.crt
ssl_self_signed_ca_key_filename: snakeoil-ca-1.key
ssl_self_signed_ca_password: capassword123
regenerate_ca: true

truststore_storepass: "{{ ssl_truststore_password if ssl_provided_keystore_and_truststore|bool else 'confluenttruststorepass'}}"
truststore_path: /var/ssl/private/client.truststore.jks
keystore_path: /var/ssl/private/client.keystore.jks
keystore_storepass: "{{ ssl_keystore_store_password if ssl_provided_keystore_and_truststore|bool else 'confluentkeystorestorepass'}}"
keystore_keypass: "{{ ssl_keystore_key_password if ssl_provided_keystore_and_truststore|bool else keystore_storepass }}"

certs_updated: false

kafka_broker_default_listeners:
  external:
    name: "{{ 'EXTERNAL' if kafka_broker_configure_additional_brokers|bool else 'DEFAULT' }}"
    port: 9092
    ssl_enabled: "{{ ssl_enabled }}"
    ssl_mutual_auth_enabled: "{{ ssl_mutual_auth_enabled }}"
    sasl_protocol: "{{ sasl_protocol }}"

kafka_broker_custom_listeners:
  internal:
    name: INTERNAL
    port: 9091
    ssl_enabled: "{{ ssl_enabled }}"
    ssl_mutual_auth_enabled: "{{ ssl_mutual_auth_enabled }}"
    sasl_protocol: "{{ sasl_protocol }}"

kafka_broker_configure_additional_brokers: true
kafka_broker_listeners: "{{ kafka_broker_default_listeners | combine(kafka_broker_custom_listeners, recursive=True) if kafka_broker_configure_additional_brokers|bool else  kafka_broker_default_listeners}}"
kafka_broker_inter_broker_listener_name: "{{ 'internal' if kafka_broker_configure_additional_brokers|bool else 'external' }}"

# Uses custom filter to create a list of all sasl_protocols, removes ['none'], and reduces to unique items
kafka_broker_sasl_enabled_mechanisms: "{{ kafka_broker_listeners | get_sasl_mechanisms | difference(['none']) | unique }}"

schema_registry_ssl_enabled: "{{ssl_enabled}}"
schema_registry_ssl_mutual_auth_enabled: "{{ ssl_mutual_auth_enabled }}"
schema_registry_http_protocol: "{{ 'https' if schema_registry_ssl_enabled|bool else 'http' }}"
schema_registry_listener_port: 8081
schema_registry_kafka_listener_name: external

kafka_rest_ssl_enabled: "{{ssl_enabled}}"
kafka_rest_ssl_mutual_auth_enabled: "{{ ssl_mutual_auth_enabled }}"
kafka_rest_http_protocol: "{{ 'https' if kafka_rest_ssl_enabled|bool else 'http' }}"
kafka_rest_port: 8082
kafka_rest_kafka_listener_name: external

kafka_connect_ssl_enabled: "{{ssl_enabled}}"
kafka_connect_ssl_mutual_auth_enabled: "{{ ssl_mutual_auth_enabled }}"
kafka_connect_http_protocol: "{{ 'https' if kafka_connect_ssl_enabled|bool else 'http' }}"
kafka_connect_rest_port: 8083
kafka_connect_kafka_listener_name: external

ksql_ssl_enabled: "{{ssl_enabled}}"
ksql_ssl_mutual_auth_enabled: "{{ ssl_mutual_auth_enabled }}"
ksql_http_protocol: "{{ 'https' if ksql_ssl_enabled|bool else 'http' }}"
ksql_listener_port: 8088
ksql_kafka_listener_name: external

control_center_ssl_enabled: "{{ssl_enabled}}"
control_center_ssl_mutual_auth_enabled: "{{ ssl_mutual_auth_enabled }}"
control_center_http_protocol: "{{ 'https' if control_center_ssl_enabled|bool else 'http' }}"
control_center_port: 9021
control_center_kafka_listener_name: external

sasl_scram_users:
  admin:
    principal: admin
    password: admin-secret
  client:
    principal: client
    password: client-secret
  kafka_connect:
    principal: kafka_connect
    password: kafka_connect-secret
  control_center:
    principal: control_center
    password: control_center-secret
  kafka_rest:
    principal: kafka_rest
    password: kafka_rest-secret
  ksql:
    principal: ksql
    password: ksql-secret
  schema_registry:
    principal: schema_registry
    password: schema_registry-secret

sasl_plain_users:
  admin:
    principal: admin
    password: admin-secret
  client:
    principal: client
    password: client-secret
  kafka_connect:
    principal: kafka_connect
    password: kafka_connect-secret
  control_center:
    principal: control_center
    password: control_center-secret
  kafka_rest:
    principal: kafka_rest
    password: kafka_rest-secret
  ksql:
    principal: ksql
    password: ksql-secret
  schema_registry:
    principal: schema_registry
    password: schema_registry-secret
